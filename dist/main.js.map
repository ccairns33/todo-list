{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;AAA6E;;AAE7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,mEAAqB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA,4CAA4C,oDAAU;AACtD,SAAS;;AAET,KAAK;AACL;;;;;;;;;;;;;;;ACjDA;AACA;AACA;AACA,oBAAoB,wBAAwB;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;;;;;;;;;ACrB+C;AACR;;;AAGvC;AACA;AACA;AACA;AACA;AACA,IAAI,sDAAe;AACnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;AACA;AACA,IAAI,+DAAgB;AACpB;AACA;AACA;AACA;AACA,oBAAoB,yBAAyB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;;;;;;;;;;ACzCoG;;AAEpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uGAAuG;AAC9H,QAAQ,yDAAW;AACnB,QAAQ,mEAAqB;;AAE7B,KAAK;AACL;AACA;;AAEA;AACA;AACA,wBAAwB,mEAAqB;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA,4CAA4C,oDAAU;AACtD,SAAS;;AAET,KAAK;AACL;;AAEA;AACA;AACA,gCAAgC,wCAAwC;AACxE,kHAAkH,SAAS;AAC3H;AACA,sCAAsC,MAAM;AAC5C;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA,oCAAoC,QAAQ;AAC5C,gEAAgE,IAAI;AACpE;AACA;AACA,uEAAuE,IAAI;AAC3E;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,wBAAwB,mEAAqB;AAC7C;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACnIoG;;AAEpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oBAAoB,4HAA4H;;AAEhJ,QAAQ,yDAAW;AACnB,QAAQ,mEAAqB;;AAE7B,KAAK;AACL;;AAEA;AACA,qBAAqB,mEAAqB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA,4CAA4C,oDAAU;AACtD,SAAS;;AAET;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA,6BAA6B,wCAAwC;AACrE,kGAAkG,UAAU;AAC5G;AACA,mCAAmC,MAAM;AACzC;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA,iCAAiC,QAAQ;AACzC,0DAA0D,IAAI;AAC9D;AACA;AACA,8DAA8D,IAAI;AAClE;AACA;AACA;AACA;;AAEA,KAAK;;AAEL;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9JkF;AAC3C;AACwC;AACa;AACvC;;AAErD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,IAAI,uDAAgB;AACpB,IAAI,6DAAmB;;AAEvB;AACA;AACA;AACA,QAAQ,+DAAgB;AACxB;AACA,KAAK;AACL;AACA;AACA,QAAQ,gEAAiB;AACzB,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,IAAI,gDAAS;AACb,IAAI,sDAAY;;AAEhB,IAAI,iEAA0B;AAC9B,IAAI,wEAA6B;AACjC;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,QAAQ,2DAAY;AACpB;AACA;AACA,QAAQ,sDAAe;AACvB;AACA;;;;;;;;UCvNA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNqD;AACrD,mEAAkB,G","sources":["webpack://todo-list/./src/date.js","webpack://todo-list/./src/home.js","webpack://todo-list/./src/newItemPanel.js","webpack://todo-list/./src/project.js","webpack://todo-list/./src/todo.js","webpack://todo-list/./src/websiteInit.js","webpack://todo-list/webpack/bootstrap","webpack://todo-list/webpack/runtime/define property getters","webpack://todo-list/webpack/runtime/hasOwnProperty shorthand","webpack://todo-list/webpack/runtime/make namespace object","webpack://todo-list/./src/index.js"],"sourcesContent":["import {getDivChildrenByClass, deleteItem, saveAndLoad} from \"./websiteInit\";\n\nlet displayDateEditPanel = (editBtn) => {\n    if (editBtn.classList.contains(\"date-edit_clicked\")){\n        let dateEditPanel = document.querySelector(\".date-item-edit\")\n        if (dateEditPanel.classList.contains(\"display-none\")){\n            dateEditPanel.classList.remove(\"display-none\");\n        }\n        else{\n            return;\n        }\n    }\n    else{\n        return;\n    }\n}\n\nlet dateItemsArrayAndListeners = (arrayDateItems) => {\n    arrayDateItems = getDivChildrenByClass(\"items-container\",\"date-item_page\");\n    console.log(arrayDateItems);\n    arrayDateItems.forEach(element => {\n        let editBtn = element.querySelector(\".date-edit\");\n        let deleteBtn = element.querySelector(\".date-delete\");\n        \n        editBtn.addEventListener(\"click\", (e) => {\n            if (editBtn.classList.contains(\"date-edit_clicked\")){\n                return;\n            }\n            else{\n                editBtn.classList.add(\"date-edit_clicked\");\n                displayDateEditPanel(editBtn);\n            }\n        })\n\n        // event listener for clicking close on date edit panel\n        let dateEditClose = document.querySelector(\".exit-date-edit\");\n        dateEditClose.addEventListener(\"click\", (e) => {\n            editBtn.classList.remove(\"date-edit_clicked\");\n            let todoEditPanel = document.querySelector(\".date-item-edit\")\n            if(!todoEditPanel.classList.contains(\"display-none\")){\n                todoEditPanel.classList.add(\"display-none\");\n            }\n        })\n\n        // deleting the item on clicking on the trash bin\n        deleteBtn.addEventListener(\"click\", deleteItem , (e) => {\n        })\n\n    });\n}\nexport{displayDateEditPanel, dateItemsArrayAndListeners}","let iconColorChange = ( clickedTab ) => {\n    let iconNodeList = document.querySelectorAll(\".sidebar_icon\");\n    let iconArr = [];\n    for (let i = 0; i< iconNodeList.length; i ++ ) {\n        iconArr.push(iconNodeList[i]);\n    }\n\n    iconArr.forEach(element => {\n        if (element.parentElement == clickedTab){\n            element.classList.remove(\"blue\");\n            if (element.classList.contains(\"pink\")){\n                //do nothing, but it shouldn't have pink\n            }\n            else {\n                    element.classList.add(\"pink\");\n            }\n        }\n        else {\n            element.classList.add(\"blue\");\n        }\n    });\n}\n\nexport {iconColorChange};","import {hideInactiveTabs} from \"./websiteInit\";\nimport {newTodoPriority} from \"./todo\";\n\n\nlet loadNewItemPanel = () =>{\n    const itemPanel = document.querySelector(\".overlay\");\n    itemPanel.classList.remove(\"display-none\");\n    \n    //adding priority event listeners\n    newTodoPriority();\n    \n}\n\nlet closeNewItemPanel = () =>{\n    const itemPanel = document.querySelector(\".overlay\");\n    itemPanel.classList.add(\"display-none\");\n\n    // default to todo panel\n    displayTab(document.querySelector(\".todo-panel\"),\"new-item-main-content\",\"item-panel\");\n\n}\n\n\n// loading the different panels\nlet displayTab = (activePanel, container, children) =>{\n    hideInactiveTabs(activePanel,container, children);\n}\nlet panelClicked = (clickedTab) => {\n    let panelNodeList = document.querySelectorAll(\".sidetab_panel\");\n    let panelArr = [];\n    for (let i = 0; i< panelNodeList.length; i ++ ) {\n        panelArr.push(panelNodeList[i]);\n    }\n    panelArr.forEach(element => {\n        if (element == clickedTab){\n            element.classList.add(\"sidebar-clicked\");\n        }\n        else {\n            element.classList.remove(\"sidebar-clicked\")\n        }\n    })\n}\n\n\nexport {loadNewItemPanel,closeNewItemPanel,displayTab,panelClicked };","import {getDivChildrenByClass, deleteItem, saveAndLoad, autoCloseNewItemPanel} from \"./websiteInit\";\n\nlet displayProjectEditPanel = (editBtn) => {\n    if (editBtn.classList.contains(\"project-edit_clicked\")){\n        let projectEditPanel = document.querySelector(\".project-item-edit\")\n        if (projectEditPanel.classList.contains(\"display-none\")){\n            projectEditPanel.classList.remove(\"display-none\");\n        }\n        else{\n            return;\n        }\n    }\n    else{\n        return;\n    }\n}\n// let newProjectPriority = (projectPriorityContainer) =>{\n//     let projectPriority = \"\";\n//     projectPriorityContainer.addEventListener(\"click\", (e) =>  {\n//         if (e.target.tagName.toLowerCase() === \"label\"){\n//             if (e.target.classList.contains(\"priority-btn-low\")){\n//                 projectPriority = \"low\";\n//             }\n//             else if (e.target.classList.contains(\"priority-btn-medium\")){\n//                 projectPriority = \"medium\";\n//             }\n//             else {\n//                 projectPriority = \"high\";\n//             }\n//         }\n//     })\n//     return projectPriority;\n// }\nlet newProjectSubmition = (projectPriorityContainer,projects, newProjectSubmitBtn,newProjectTitle,newProjectDetails,newProjectDueDate) => {\n    newProjectSubmitBtn.addEventListener(\"click\", (e) => {\n            \n        let projTitle = newProjectTitle.value;\n        let projDetails = newProjectDetails.value;\n        let projDate = newProjectDueDate.value;\n        projects.push({_id: Date.now().toString(),category: \"project\",title: projTitle,details: projDetails,dueDate: projDate});\n        saveAndLoad();\n        autoCloseNewItemPanel();\n\n    })\n    \n}\n\n    // event listeners for the project items in project sidebar\nlet projectItemsArrayAndListeners = (arrayProjectItems) => {\n    arrayProjectItems = getDivChildrenByClass(\"items-container\",\"project-item_page\");\n    arrayProjectItems.forEach(element => {\n        let checkmark = element.querySelector(\".project-checkmark\");\n        let detail = element.querySelector(\".project-detail\");\n        let tooltip = element.querySelector(\".project-detail_wrap\");\n        let editBtn = element.querySelector(\".project-edit\");\n        let deleteBtn = element.querySelector(\".project-delete\");\n\n        checkmark.addEventListener(\"click\",(e) => {\n            if(checkmark.classList.contains(\"project-checkmark_checked\")){\n                checkmark.classList.remove(\"project-checkmark_checked\");\n            }\n            else{\n               checkmark.classList.add(\"project-checkmark_checked\");\n            }\n        })\n    // will display and not display deatil text if mouse is in or out\n        detail.addEventListener(\"mouseover\", (e) => {\n            if (tooltip.classList.contains(\"display-none\")){\n                tooltip.classList.remove(\"display-none\");\n            }\n        })\n        detail.addEventListener(\"mouseout\", (e) => {\n            if (!tooltip.classList.contains(\"display-none\")){\n                tooltip.classList.add(\"display-none\");\n            }\n        })\n        editBtn.addEventListener(\"click\", (e) => {\n            if (editBtn.classList.contains(\"project-edit_clicked\")){\n                return;\n            }\n            else{\n                editBtn.classList.add(\"project-edit_clicked\");\n                displayProjectEditPanel(editBtn);\n            }\n        })\n\n        // event listener for clicking close on project edit panel\n        let projectEditClose = document.querySelector(\".exit-project-edit\");\n        projectEditClose.addEventListener(\"click\", (e) => {\n            editBtn.classList.remove(\"project-edit_clicked\");\n            let projectEditPanel = document.querySelector(\".project-item-edit\")\n            if(!projectEditPanel.classList.contains(\"display-none\")){\n                projectEditPanel.classList.add(\"display-none\");\n            }\n        })\n\n        // deleting the todo items on click\n        deleteBtn.addEventListener(\"click\", deleteItem , (e) => {\n        })\n\n    });\n}\n\nlet loadProjects = (projects,itemsContainer,arrayProjectItems) => {\n    let projectsToRender = projects;\n    projectsToRender.forEach(({ _id, category, title, details, dueDate }) => {\n        itemsContainer.innerHTML += `<div id=\"item-display_page\" class=\"project-item_page d-flex\" data-catagory=${category}>\n        <div class=\"project-checkmark\"></div>\n        <div class=\"project-title\"> ${title}</div>\n        <div class=\"project-detail\">project details\n          <div class= \"project-detail_wrap display-none\">\n              <span class= \"project-detail_content\">\n                <p>${details} </p>\n              </span>\n          </div>\n        </div>\n        <div class=\"project-date\">${dueDate}</div>\n        <div class=\"project-edit todo-icon\" data-edit-project=${_id}>\n          <i class=\"far fa-edit\"></i>\n        </div>\n        <div class=\"project-delete project-icon\" data-delete-project=${_id}>\n          <i class=\"far fa-trash-alt\"></i>\n        </div>\n      </div>`\n    })\n\n}\nlet updateArrayProjectItems = (arrayProjectItems) => {\n    arrayProjectItems = getDivChildrenByClass(\"items-container\",\"project-item_page\");\n    console.log(\"array-projects:\" +arrayProjectItems);\n    return arrayProjectItems;\n}\n\nexport{displayProjectEditPanel, projectItemsArrayAndListeners, updateArrayProjectItems, loadProjects,newProjectSubmition}","import {getDivChildrenByClass, deleteItem, saveAndLoad, autoCloseNewItemPanel} from \"./websiteInit\";\n\nlet displayTodoEditPanel = (editBtn) => {\n    if (editBtn.classList.contains(\"todo-edit_clicked\")){\n        let todoEditPanel = document.querySelector(\".todo-item-edit\")\n        if (todoEditPanel.classList.contains(\"display-none\")){\n            todoEditPanel.classList.remove(\"display-none\");\n        }\n        else{\n            return;\n        }\n    }\n    else{\n        return;\n    }\n}\nlet newTodoPriority = () =>{\n    let priorityContainer = document.querySelector(\"#new-todo-priority-container\");\n    let priorityArr= Array.from(document.querySelectorAll(\".todo-priority-btn\"))\n    priorityContainer.addEventListener(\"click\", (e)=>{\n        if (e.target.tagName.toLowerCase() === \"label\") {\n            if (!e.target.classList.contains(\"todo-priority_clicked\")){\n                e.target.classList.add(\"todo-priority_clicked\");\n\n            }\n            else {\n                e.target.classList.remove(\"todo-priority_clicked\");\n            }\n        }        \n        priorityArr.forEach(btn =>{\n            if(btn.classList.contains(\"todo-priority_clicked\")){\n                btn.classList.add(\"todo-priority-btn-\"+btn.textContent.toLowerCase()+\"_clicked\")\n                btn.classList.remove(\"todo-priority-btn-\"+btn.textContent.toLowerCase())\n\n            }\n            else {\n                if (btn.classList.contains(\"todo-priority-btn-\"+btn.textContent.toLowerCase()+\"_clicked\")){\n                    btn.classList.remove(\"todo-priority-btn-\"+btn.textContent.toLowerCase()+\"_clicked\")\n                    btn.classList.add(\"todo-priority-btn-\"+btn.textContent.toLowerCase())\n                 }\n\n\n            }\n        })\n    })\n}\nlet newTodoSubmition = (todoPriorityContainer,todos, newTodoSubmitBtn,newTodoTitle,newTodoDetails,newTodoDueDate ) => {\n    // finding todo priority\n    // let todoPriority = newTodoPriority(todoPriorityContainer);\n    newTodoSubmitBtn.addEventListener(\"click\", (e) => {\n            \n        let todoTitle = newTodoTitle.value;\n        let todoDetails = newTodoDetails.value;\n        let todoDate = newTodoDueDate.value;\n        let todoPriority=\"\";\n\n        let priorityArr= Array.from(document.querySelectorAll(\".todo-priority-btn\"));\n        priorityArr.forEach(btn=>{\n            if(btn.classList.contains(\"todo-priority_clicked\")){\n                todoPriority=btn.value;\n            }\n        })\n        todos.push({_id: Date.now().toString(),category: \"todo\",title: todoTitle,details: todoDetails,dueDate: todoDate, priority: todoPriority});\n\n        saveAndLoad();\n        autoCloseNewItemPanel();\n\n    })\n}\n\nlet todoItemsArrayAndListeners = (arrayTodoItems) => {\n    arrayTodoItems = getDivChildrenByClass(\"items-container\",\"todo-item_page\");\n    console.log(arrayTodoItems);\n\n    arrayTodoItems.forEach(element => {\n        let checkmark = element.querySelector(\".todo-checkmark\");\n        let detail = element.querySelector(\".todo-detail\");\n        let tooltip = element.querySelector(\".todo-detail_wrap\");\n        let editBtn = element.querySelector(\".todo-edit\");\n        let deleteBtn = element.querySelector(\".todo-delete\");\n\n\n        checkmark.addEventListener(\"click\",(e) => {\n            if(checkmark.classList.contains(\"todo-checkmark_checked\")){\n                checkmark.classList.remove(\"todo-checkmark_checked\");\n                console.log(\"unchecked\");\n            }\n            else{\n               checkmark.classList.add(\"todo-checkmark_checked\");\n               console.log(\"checked\");\n\n            }\n        })\n    // will display and not display deatil text if mouse is in or out\n        detail.addEventListener(\"mouseover\", (e) => {\n            if (tooltip.classList.contains(\"display-none\")){\n                tooltip.classList.remove(\"display-none\");\n            }\n        })\n        detail.addEventListener(\"mouseout\", (e) => {\n            if (!tooltip.classList.contains(\"display-none\")){\n                tooltip.classList.add(\"display-none\");\n            }\n        })\n        editBtn.addEventListener(\"click\", (e) => {\n            if (editBtn.classList.contains(\"todo-edit_clicked\")){\n                return;\n            }\n            else{\n                editBtn.classList.add(\"todo-edit_clicked\");\n                displayTodoEditPanel(editBtn);\n            }\n        })\n\n        // event listener for clicking close on todo edit panel\n        let todoEditClose = document.querySelector(\".exit-todo-edit\");\n        todoEditClose.addEventListener(\"click\", (e) => {\n            editBtn.classList.remove(\"todo-edit_clicked\");\n            let todoEditPanel = document.querySelector(\".todo-item-edit\")\n            if(!todoEditPanel.classList.contains(\"display-none\")){\n                todoEditPanel.classList.add(\"display-none\");\n            }\n        })\n\n        // deleting the todo items on click\n        deleteBtn.addEventListener(\"click\", deleteItem , (e) => {\n        })\n\n        \n\n    });\n}\nlet loadTodos = (todos,itemsContainer,arrayTodoItems) => {\n    let todosToRender = todos;\n    let todoItemAdded = [];\n    todosToRender.forEach(({ _id, category, title, details, dueDate }) => {\n        todoItemAdded =`<div id=\"item-display_page\" class=\"todo-item_page d-flex\" data-catagory=${category} >\n        <div class=\"todo-checkmark\"></div>\n        <div class=\"todo-title\"> ${title}</div>\n        <div class=\"todo-detail\">item details\n          <div class= \"todo-detail_wrap display-none\">\n              <span class= \"todo-detail_content\">\n                <p>${details} </p>\n              </span>\n          </div>\n        </div>\n        <div class=\"todo-date\">${dueDate}</div>\n        <div class=\"todo-edit todo-icon\" data-edit-todo=${_id}>\n          <i class=\"far fa-edit\"></i>\n        </div>\n        <div class=\"todo-delete todo-icon\" data-delete-todo=${_id}>\n          <i class=\"far fa-trash-alt\"></i>\n        </div>\n      </div>`\n      itemsContainer.innerHTML += todoItemAdded;\n\n    })\n\n}\n\nexport{displayTodoEditPanel, loadTodos, todoItemsArrayAndListeners,newTodoSubmition, newTodoPriority}","import {loadNewItemPanel, closeNewItemPanel, panelClicked } from \"./newItemPanel\";\nimport {iconColorChange} from \"./home\";\nimport {loadTodos, todoItemsArrayAndListeners, newTodoSubmition} from \"./todo\";\nimport { projectItemsArrayAndListeners, loadProjects, newProjectSubmition} from \"./project\";\nimport {dateItemsArrayAndListeners} from \"./date.js\";\n\n// Selector for todos container\nconst itemsContainer = document.querySelector('[data-container]');\n\n// Local storage keys\nconst LOCAL_STORAGE_CATEGORIES_KEY = 'LOCAL_STORAGE_CATEGORIES_KEY';\nconst LOCAL_STORAGE_TODOS_KEY = 'LOCAL_STORAGE_TODOS_KEY';\nconst LOCAL_STORAGE_PROJECTS_KEY = 'LOCAL_STORAGE_PROJECTS_KEY';\nconst LOCAL_STORAGE_DATES_KEY = 'LOCAL_STORAGE_DATES_KEY';\nconst LOCAL_STORAGE_NOTES_KEY = 'LOCAL_STORAGE_NOTES_KEY';\n\n\nconst LOCAL_STORAGE_SELECTED_CATEGORY_ID_KEY = 'LOCAL_STORAGE_SELECTED_CATEGORY_ID_KEY';\n\nlet selectedCategoryId = localStorage.getItem(LOCAL_STORAGE_SELECTED_CATEGORY_ID_KEY);\nlet categories = JSON.parse(localStorage.getItem(LOCAL_STORAGE_CATEGORIES_KEY)) || [];\nlet todos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_TODOS_KEY)) || [];\nlet projects = JSON.parse(localStorage.getItem(LOCAL_STORAGE_PROJECTS_KEY)) || [];\nlet dates = JSON.parse(localStorage.getItem(LOCAL_STORAGE_DATES_KEY)) || [];\nlet notes = JSON.parse(localStorage.getItem(LOCAL_STORAGE_NOTES_KEY)) || [];\n\n// todo selectors for new todo\nlet newTodoSubmitBtn = document.querySelector(\".create-new-todo-submit\");\nlet newTodoTitle = document.querySelector(\"#new-todo-title\");\nlet newTodoDetails = document.querySelector(\"#new-todo-details\");\nlet newTodoDueDate = document.querySelector(\"#new-todo-date\");\nlet todoPriorityContainer = document.querySelector(\"#new-todo-priority-container\")\n\n// project selectors for new project\nlet newProjectSubmitBtn = document.querySelector(\".create-new-project-submit\");\nlet newProjectTitle = document.querySelector(\"#new-project-title\");\nlet newProjectDetails = document.querySelector(\"#new-project-details\");\nlet newProjectDueDate = document.querySelector(\"#new-project-date\");\nlet projectPriorityContainer = document.querySelector(\"#new-project-priority-container\")\n\nlet arrayTodoItems = [];\nlet arrayProjectItems = [];\nlet arrayDateItems = [];\n\n\nlet initEventListeners = () => {\n    // add in items !!\n    load();\n\n    // for utilizing new submitions\n    newTodoSubmition(todoPriorityContainer,todos, newTodoSubmitBtn,newTodoTitle,newTodoDetails,newTodoDueDate);\n    newProjectSubmition(projectPriorityContainer,projects, newProjectSubmitBtn,newProjectTitle,newProjectDetails,newProjectDueDate);\n\n    // new item panel open and close\n    const newItemBtn = document.querySelector(\".new-todo_btn\");\n    newItemBtn.addEventListener(\"click\", (e) => {\n        loadNewItemPanel();\n       \n    })\n    const closePanel = document.querySelector(\".exit-new-item\");\n    closePanel.addEventListener(\"click\", (e) => {\n        closeNewItemPanel();\n    })\n\n    // new panel tabs\n    const dateTabPanel = document.querySelector(\".new-item-date\");\n    const todoTabPanel = document.querySelector(\".new-item-todo\");\n    const projectTabPanel = document.querySelector(\".new-item-project\");\n    const noteTabPanel = document.querySelector(\".new-item-note\");\n\n    // main content for the new item panel\n    const container_panel = \"new-item-main-content\";\n    const children_panel = 'item-panel';\n\n    todoTabPanel.addEventListener(\"click\", (e) => {\n        hideInactiveTabs(document.querySelector(\".todo-panel\"),container_panel, children_panel,todoTabPanel);\n    })\n    projectTabPanel.addEventListener(\"click\", (e) => {\n        hideInactiveTabs(document.querySelector(\".project-panel\"),container_panel, children_panel,projectTabPanel);\n    })\n    dateTabPanel.addEventListener(\"click\", (e) => {\n        hideInactiveTabs(document.querySelector(\".date-panel\"),container_panel, children_panel,dateTabPanel);\n    })\n    noteTabPanel.addEventListener(\"click\", (e) => {\n        hideInactiveTabs(document.querySelector(\".note-panel\"),container_panel, children_panel,noteTabPanel);\n    })\n\n\n    // tabs for chagning main content from sidebar nav\n    const todoSideTab = document.querySelector(\".todo-list_tab\");\n    const projectsSideTab = document.querySelector(\".projects_tab\");\n    const datesSideTab = document.querySelector(\".dates_tab\");\n    const notesSideTab = document.querySelector(\".notes_tab\");\n    const container_tab = \"items-container\";\n    const children_tab= \"item-display_page\";\n\n    todoSideTab.addEventListener(\"click\", (e) => {\n        let activePanel = document.querySelector(\".todo-item_page\");\n        hideInactiveTabs(activePanel,container_tab, children_tab,todoSideTab);\n    })\n    projectsSideTab.addEventListener(\"click\", (e) => {\n        let activePanel = document.querySelector(\".project-item_page\");\n        hideInactiveTabs(activePanel,container_tab, children_tab,projectsSideTab);\n    })\n    datesSideTab.addEventListener(\"click\", (e) => {\n        let activePanel = document.querySelector(\".date-item_page\");\n        hideInactiveTabs(activePanel,container_tab, children_tab,datesSideTab);\n    })\n    notesSideTab.addEventListener(\"click\", (e) => {\n        let activePanel = document.querySelector(\".notes-container\");\n        hideInactiveTabs(activePanel,container_tab, children_tab,notesSideTab);\n    })\n\n    // event listener for exiting note from note tab\n    let noteExit = document.querySelector(\".note-close_icon\");\n    noteExit.addEventListener(\"click\", deleteItem, (e) =>{\n    })\n}\nlet autoCloseNewItemPanel = () => {\n    let newItemPanel = document.querySelector(\".overlay\");\n    newItemPanel.classList.add(\"display-none\");\n}\n\nlet load = () => {\n    // clearing old data\n    clearChildElements(itemsContainer);\n\n    loadTodos(todos,itemsContainer,arrayTodoItems);\n    loadProjects(projects,itemsContainer,arrayProjectItems);\n\n    todoItemsArrayAndListeners(arrayTodoItems)\n    projectItemsArrayAndListeners(arrayProjectItems)\n    // dateItemsArrayAndListeners(arrayDateItems);\n\n\n}\nlet saveAndLoad = () =>{\n    // saves\n    // console.log(LOCAL_STORAGE_TODOS_KEY)\n    localStorage.setItem(LOCAL_STORAGE_TODOS_KEY, JSON.stringify(todos));\n    localStorage.setItem(LOCAL_STORAGE_PROJECTS_KEY, JSON.stringify(projects));\n\n\n    // loading/ rendering\n    load();\n    \n}\n\nlet deleteItem = (e) =>{\n    let deleteBtn = e.target;\n    let item = deleteBtn.parentElement.parentElement;\n    let itemParent = item.parentElement;\n    // strange bug will delete items-container, in a certain sequence of events. hard to replicate\n    if(itemParent.firstChild.id === \"items-container\"){\n        return;\n    }\n    else {\n        itemParent.removeChild(item);\n    }\n}\nlet getDivChildrenByClass = (containerClass, elementsClass) =>{\n    let div = document.querySelector(\".\"+containerClass),\n        subDiv = div.querySelectorAll(\".\"+elementsClass),\n        myArray = [];\n    \n    for(let i = 0; i < subDiv.length; i++) {\n        let elem = subDiv[i];\n        myArray.push(elem);\n\n    }\n    return myArray;\n}\nlet clearChildElements = (element) => {\n    while (element.firstChild) {\n        element.removeChild(element.firstChild);\n    }\n}\n\nlet getDivChildren = (containerId, elementsId) =>{\n    let div = document.getElementById(containerId),\n        subDiv = div.getElementsByTagName('div'),\n        myArray = [];\n\n    for(let i = 0; i < subDiv.length; i++) {\n        let elem = subDiv[i];\n        if(elem.id == elementsId) {\n            myArray.push(elem);\n        }\n    }\n    return myArray;\n}\n//add display none for other tabs and calling icon color changing\nlet hideInactiveTabs = (activePanel, container, children, clickedTab) =>{\n    let tabsArr = getDivChildren(container, children);\n    if (activePanel!= null){\n        tabsArr.forEach(element => {\n            if(activePanel.classList[0] === element.classList[0]){\n                element.classList.remove(\"display-none\");\n            }\n            else{\n                element.classList.add(\"display-none\");\n            }\n        });\n    } \n    else{\n        tabsArr.forEach(element => {\n            element.classList.add(\"display-none\")\n        });\n    }\n    if (children === 'item-panel'){\n        panelClicked(clickedTab);\n    }\n    else {\n        iconColorChange(clickedTab);\n    }\n}\n\nexport {initEventListeners, getDivChildren, hideInactiveTabs, getDivChildrenByClass, deleteItem, saveAndLoad, autoCloseNewItemPanel};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {initEventListeners } from \"./websiteInit.js\";\ninitEventListeners();"],"names":[],"sourceRoot":""}