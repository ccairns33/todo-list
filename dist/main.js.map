{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA,oBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;;;;;;;ACpB+C;;AAE/C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI,+DAAgB;AACpB;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACboE;AAC7B;AACK;;;AAG5C;AACA;AACA;AACA,QAAQ,+DAAgB;AACxB,KAAK;;AAEL;AACA;AACA,QAAQ,gEAAiB;AACzB,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,YAAY,sDAAe;AAC3B;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,YAAY,sDAAe;AAC3B;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,sDAAe;AAC3B;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,YAAY,sDAAe;AAC3B;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2DAAoB;AACpC;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,IAAI,sDAAe;AACnB;;;;;;;;UCvMA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNqD;AACrD,mEAAkB,G","sources":["webpack://todo-list/./src/home.js","webpack://todo-list/./src/newItemPanel.js","webpack://todo-list/./src/todo.js","webpack://todo-list/./src/websiteInit.js","webpack://todo-list/webpack/bootstrap","webpack://todo-list/webpack/runtime/define property getters","webpack://todo-list/webpack/runtime/hasOwnProperty shorthand","webpack://todo-list/webpack/runtime/make namespace object","webpack://todo-list/./src/index.js"],"sourcesContent":["let iconColorChange = ( tabsArr,activePanel, clickedTab ) => {\n    let iconNodeList = document.querySelectorAll(\".sidebar_icon\");\n    let iconArr = [];\n    for (let i = 0; i< iconNodeList.length; i ++ ) {\n        iconArr.push(iconNodeList[i]);\n    }\n    iconArr.forEach(element => {\n        if (element.parentElement == clickedTab){\n            element.classList.remove(\"blue\");\n            if (element.classList.contains(\"pink\")){\n                //do nothing, but it shouldn't have pink\n            }\n            else {\n                    element.classList.add(\"pink\");\n            }\n        }\n        else {\n            element.classList.add(\"blue\");\n        }\n    });\n}\n\nexport {iconColorChange};","import {hideInactiveTabs} from \"./websiteInit\";\n\nlet loadNewItemPanel = () =>{\n    const itemPanel = document.querySelector(\".overlay\");\n    itemPanel.classList.remove(\"display-none\");\n}\n\nlet closeNewItemPanel = () =>{\n    const itemPanel = document.querySelector(\".overlay\");\n    itemPanel.classList.add(\"display-none\");\n\n    // default to todo panel\n    displayTab(document.querySelector(\".todo-panel\"),\"new-item-main-content\",\"item-panel\");\n\n}\n\n// loading the different panels\nlet displayTab = (activePanel, container, children) =>{\n    hideInactiveTabs(activePanel,container, children);\n}\n\n\nexport {loadNewItemPanel,closeNewItemPanel,displayTab };","let displayTodoEditPanel = (editBtn) => {\n    if (editBtn.classList.contains(\"todo-edit_clicked\")){\n        let todoEditPanel = document.querySelector(\".overlay-todoitem-edit\")\n        if (todoEditPanel.classList.contains(\"display-none\")){\n            todoEditPanel.classList.remove(\"display-none\");\n        }\n        else{\n            return;\n        }\n    }\n    else{\n        return;\n    }\n}\nexport{displayTodoEditPanel}","import {loadNewItemPanel, closeNewItemPanel } from \"./newItemPanel\";\nimport {iconColorChange} from \"./home\";\nimport {displayTodoEditPanel} from \"./todo\";\n\n\nlet initEventListeners = () => {\n    const newTodoBtn = document.querySelector(\".new-todo_btn\");\n    newTodoBtn.addEventListener(\"click\", (e) => {\n        loadNewItemPanel();\n    })\n\n    const closePanel = document.querySelector(\".exit-new-item\");\n    closePanel.addEventListener(\"click\", (e) => {\n        closeNewItemPanel();\n    })\n\n    // new panel tabs\n    const dateTab = document.querySelector(\".new-item-date\");\n    const todoTab = document.querySelector(\".new-item-todo\");\n    const projectTab = document.querySelector(\".new-item-project\");\n    const noteTab = document.querySelector(\".new-item-note\");\n\n    todoTab.addEventListener(\"click\", (e) => {\n        hideInactiveTabs(document.querySelector(\".todo-panel\"),\"new-item-main-content\", 'item-panel');\n    })\n    projectTab.addEventListener(\"click\", (e) => {\n        hideInactiveTabs(document.querySelector(\".project-panel\"),\"new-item-main-content\", 'item-panel');\n    })\n    dateTab.addEventListener(\"click\", (e) => {\n        hideInactiveTabs(document.querySelector(\".date-panel\"),\"new-item-main-content\", 'item-panel');\n    })\n    noteTab.addEventListener(\"click\", (e) => {\n        hideInactiveTabs(document.querySelector(\".note-panel\"),\"new-item-main-content\", 'item-panel');\n    })\n\n    // tabs for chagning main content from sidebar nav\n    const todoSideTab = document.querySelector(\".todo-list_tab\");\n    const projectsSideTab = document.querySelector(\".projects_tab\");\n    const datesSideTab = document.querySelector(\".dates_tab\");\n    const notesSideTab = document.querySelector(\".notes_tab\");\n\n    todoSideTab.addEventListener(\"click\", (e) => {\n        let container = \"items-container\";\n        let children= \"item-display_page\";\n        let activePanel = document.querySelector(\".todo-item_page\");\n\n        if (activePanel != null){\n            hideInactiveTabs(activePanel,container, children,todoSideTab);\n        }\n        else {\n            let tabsArr = getDivChildren(container, children);\n\n            iconColorChange(tabsArr,activePanel,todoSideTab);\n        }\n    })\n    projectsSideTab.addEventListener(\"click\", (e) => {\n        let container = \"items-container\";\n        let children= \"item-display_page\";\n        let activePanel = document.querySelector(\".project-item_page\");\n\n        if ( activePanel != null){\n            hideInactiveTabs(activePanel,container, children,projectsSideTab);\n        }\n        else {\n            let tabsArr = getDivChildren(container, children);\n\n            iconColorChange(tabsArr,activePanel,projectsSideTab );\n        }\n    })\n    datesSideTab.addEventListener(\"click\", (e) => {\n        let container = \"items-container\";\n        let children= \"item-display_page\";\n        let activePanel = document.querySelector(\".date-item_page\");\n        if (activePanel != null){\n            hideInactiveTabs(activePanel,container, children,datesSideTab);\n        }\n        else {\n            let tabsArr = getDivChildren(container, children);\n\n            iconColorChange(tabsArr,activePanel, datesSideTab);\n        }\n    })\n    notesSideTab.addEventListener(\"click\", (e) => {\n        let container = \"items-container\";\n        let children= \"item-display_page\";\n        let activePanel = document.querySelector(\".notes-container\");\n\n        if (activePanel!= null){\n            hideInactiveTabs(activePanel,container, children,notesSideTab);\n        }\n        else {\n            let tabsArr = getDivChildren(container, children);\n\n            iconColorChange(tabsArr,activePanel, notesSideTab);\n        }\n    })\n    //event listeners for the todo items in Todo List sidebar\n\n    let arrayTodoItems = getDivChildrenByClass(\"items-container\",\"todo-item_page\");\n    console.log(arrayTodoItems);\n    arrayTodoItems.forEach(element => {\n        let checkmark = element.querySelector(\".todo-checkmark\");\n        let detail = element.querySelector(\".todo-detail\");\n        let tooltip = element.querySelector(\".todo-detail_wrap\");\n        let editBtn = element.querySelector(\".todo-edit\");\n        let deleteBtn = element.querySelector(\".todo-delete\");\n\n        checkmark.addEventListener(\"click\",(e) => {\n            if(checkmark.classList.contains(\"todo-checkmark_checked\")){\n                checkmark.classList.remove(\"todo-checkmark_checked\");\n            }\n            else{\n               checkmark.classList.add(\"todo-checkmark_checked\");\n            }\n        })\n    // will display and not display deatil text if mouse is in or out\n        detail.addEventListener(\"mouseover\", (e) => {\n            if (tooltip.classList.contains(\"display-none\")){\n                tooltip.classList.remove(\"display-none\");\n            }\n        })\n        detail.addEventListener(\"mouseout\", (e) => {\n            if (!tooltip.classList.contains(\"display-none\")){\n                tooltip.classList.add(\"display-none\");\n            }\n        })\n        editBtn.addEventListener(\"click\", (e) => {\n            if (editBtn.classList.contains(\"todo-edit_clicked\")){\n                return;\n            }\n            else{\n                editBtn.classList.add(\"todo-edit_clicked\");\n                displayTodoEditPanel(editBtn);\n            }\n        })\n\n        // event listener for clicking close on todo edit panel\n        let todoEditClose = document.querySelector(\".exit-todo-edit\");\n        todoEditClose.addEventListener(\"click\", (e) => {\n            editBtn.classList.remove(\"todo-edit_clicked\");\n            let todoEditPanel = document.querySelector(\".overlay-todoitem-edit\")\n            if(!todoEditPanel.classList.contains(\"display-none\")){\n                todoEditPanel.classList.add(\"display-none\");\n            }\n        })\n\n        // deleting the todo items on click\n        deleteBtn.addEventListener(\"click\", deleteItem , (e) => {\n        })\n\n    });\n\n}\n\nlet deleteItem = (e) =>{\n    let deleteBtn = e.target;\n    let item = deleteBtn.parentElement.parentElement;\n    let itemParent = item.parentElement;\n    itemParent.removeChild(item);\n}\nlet getDivChildrenByClass = (containerClass, elementsClass) =>{\n    let div = document.querySelector(\".\"+containerClass),\n        subDiv = div.querySelectorAll(\".\"+elementsClass),\n        myArray = [];\n    \n    for(let i = 0; i < subDiv.length; i++) {\n        let elem = subDiv[i];\n        myArray.push(elem);\n\n    }\n    return myArray;\n}\n\nlet getDivChildren = (containerId, elementsId) =>{\n    let div = document.getElementById(containerId),\n        subDiv = div.getElementsByTagName('div'),\n        myArray = [];\n\n    for(let i = 0; i < subDiv.length; i++) {\n        let elem = subDiv[i];\n        if(elem.id == elementsId) {\n            myArray.push(elem);\n        }\n    }\n    return myArray;\n}\n//add display none for other tabs and calling icon color changing\nlet hideInactiveTabs = (activePanel, container, children, clickedTab) =>{\n    let tabsArr = getDivChildren(container, children);\n        tabsArr.forEach(element => {\n            if(activePanel.classList[0] === element.classList[0]){\n                activePanel.classList.remove(\"display-none\");\n            }\n            else{\n                element.classList.add(\"display-none\");\n            }\n        });\n    \n    iconColorChange(tabsArr,activePanel,clickedTab );\n}\n\nexport {initEventListeners, getDivChildren, hideInactiveTabs};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {initEventListeners } from \"./websiteInit.js\";\ninitEventListeners();"],"names":[],"sourceRoot":""}